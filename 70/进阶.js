/**
 * 70题的进阶
 */
var climbStairs = function (n) {
  /**
   * dp[i][j]表示经过j步到达第i个台阶的方案数
   * j= 1 或者2
   * 因为我们每次都是走1级台阶或者走2级台阶到达终点
   */
  let dp = new Array(n + 1);
  for (let i = 0; i <= n; i++) {
    // 为了更易于理解 使用的时候从1开始使用
    dp[i] = new Array(3);
  }

  // 最后一步走1级台阶到达第一个台阶的方案数
  dp[1][1] = 1;

  // 最后一步走2级台阶到达第一个台阶的方案数
  dp[1][2] = 0;

  // 最后一步走1个台阶到达第二个台阶的方案数为1
  // 也就是直接从第一级台阶往上走1阶
  dp[2][1] = 1;

  // 最后一步走2个台阶到达第二个台阶的方案数为1
  // 也就是直接从没有台阶的地方直接走2阶到达第二个
  dp[2][2] = 1;

  for (let i = 3; i <= n; i++) {
    dp[i][1] = dp[i - 1][1] + dp[i - 1][2];
    dp[i][2] = dp[i - 2][1];
  }

  return dp[n][1] + dp[n][2];
};
